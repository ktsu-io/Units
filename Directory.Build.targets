<Project>
  <PropertyGroup>
    <DirectoryBuildTargetsFile>$(MSBuildThisFileFullPath)</DirectoryBuildTargetsFile>
    
    <IsPrerelease Condition="$(Version.Contains('-'))">True</IsPrerelease>
    <IsExecutable Condition="$(OutputType) == 'exe'">True</IsExecutable>
    <IsTest Condition="$(IsTestProject) == true">True</IsTest>
    <IsLibrary Condition="'$(IsExecutable)$(IsTest)' == ''">True</IsLibrary>
    <IsPrimaryProject Condition="$(MSBuildProjectName) == '$(SolutionName)'">True</IsPrimaryProject>
  </PropertyGroup>

  <PropertyGroup Condition="$(IsExecutable) == true">
    <PublishSingleFile>true</PublishSingleFile>
    <PublishAot>true</PublishAot>
  </PropertyGroup>

  <PropertyGroup Condition="$(IsTest) == true">
    <NoWarn>$(NoWarn);CS1591;CA2225;CA1707;IDE0022;IDE0058;CA1305;S4056;S104;CA5394;</NoWarn>
  </PropertyGroup>

  <PropertyGroup Condition="$(IsLibrary) == true">
    <IsPackable>True</IsPackable>
    <EnablePackageValidation>True</EnablePackageValidation>
  </PropertyGroup>

  <PropertyGroup Condition="$(IsLibrary) != true Or $(IsPrimaryProject) != true">
    <IsPackable>False</IsPackable>
  </PropertyGroup>

  <PropertyGroup Condition="$(IsPrerelease) == true">
    <NoWarn>$(NoWarn);CS1591;</NoWarn>
    <AnalysisLevel>latest-recommended</AnalysisLevel>
  </PropertyGroup>

  <ItemGroup Condition="$(IsTest) != true">
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All"/>
    <InternalsVisibleTo Include="$(RootNamespace).Test" />
    <InternalsVisibleTo Include="$(RootNamespace).Tests" />
    <InternalsVisibleTo Include="Test" />
  </ItemGroup>

  <ItemGroup Condition="$(IsPrimaryProject) == true">
    <None Condition="Exists('$(DirectoryBuildPropsFile)')" Remove="$(DirectoryBuildPropsFile)" />
    <None Condition="Exists('$(DirectoryBuildTargetsFile)')" Remove="$(DirectoryBuildTargetsFile)" />
    <None Condition="Exists('$(RunSettingsFilePath)')" Remove="$(RunSettingsFilePath)" />
    <None Condition="Exists('$(EditorConfigFilePath)')" Remove="$(EditorConfigFilePath)" />
    <None Condition="Exists('$(GitAttributesFilePath)')" Remove="$(GitAttributesFilePath)" />
    <None Condition="Exists('$(GitIgnoreFilePath)')" Remove="$(GitIgnoreFilePath)" />
    <None Condition="Exists('$(GitModulesFilePath)')" Remove="$(GitModulesFilePath)" />
    <None Condition="Exists('$(AuthorsFilePath)')" Remove="$(AuthorsFilePath)" />
    <None Condition="Exists('$(DescriptionFilePath)')" Remove="$(DescriptionFilePath)" />
    <None Condition="Exists('$(LicenseFilePath)')" Remove="$(LicenseFilePath)" />
    <None Condition="Exists('$(ChangelogFilePath)')" Remove="$(ChangelogFilePath)" />
    <None Condition="Exists('$(ReadmeFilePath)')" Remove="$(ReadmeFilePath)" />
    <None Condition="Exists('$(VersionFilePath)')" Remove="$(VersionFilePath)" />
    <None Condition="Exists('$(GlobalJsonFilePath)')" Remove="$(GlobalJsonFilePath)" />
    <None Condition="Exists('$(MailMapFilePath)')" Remove="$(MailMapFilePath)" />
    <None Condition="Exists('$(SetupNsiFilePath)')" Remove="$(SetupNsiFilePath)" />
    <None Condition="Exists('$(DotnetCoreNshFilePath)')" Remove="$(DotnetCoreNshFilePath)" />
    <None Condition="Exists('$(AzurePipelinesFilePath)')" Remove="$(AzurePipelinesFilePath)" />
    <None Condition="Exists('$(ReleasesFilePath)')" Remove="$(ReleasesFilePath)" />

    <None Condition="Exists('$(DirectoryBuildPropsFile)')" Include="$(DirectoryBuildPropsFile)" Pack="False" PackagePath="\" Link="BuildScripts\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(DirectoryBuildTargetsFile)')" Include="$(DirectoryBuildTargetsFile)" Pack="False" PackagePath="\" Link="BuildScripts\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(RunSettingsFilePath)')" Include="$(RunSettingsFilePath)" Pack="False" PackagePath="\" Link="BuildScripts\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(EditorConfigFilePath)')" Include="$(EditorConfigFilePath)" Pack="False" PackagePath="\" Link="BuildScripts\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(GlobalJsonFilePath)')" Include="$(GlobalJsonFilePath)" Pack="False" PackagePath="\" Link="BuildScripts\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(SetupNsiFilePath)')" Include="$(SetupNsiFilePath)" Pack="False" PackagePath="\" Link="BuildScripts\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(DotnetCoreNshFilePath)')" Include="$(DotnetCoreNshFilePath)" Pack="False" PackagePath="\" Link="BuildScripts\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(AzurePipelinesFilePath)')" Include="$(AzurePipelinesFilePath)" Pack="False" PackagePath="\" Link="BuildScripts\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(ReleasesFilePath)')" Include="$(ReleasesFilePath)" Pack="False" PackagePath="\" Link="BuildScripts\%(RecursiveDir)%(Filename)%(Extension)"/>
    
    <None Condition="Exists('$(GitAttributesFilePath)')" Include="$(GitAttributesFilePath)" Pack="False" PackagePath="\" Link="GitConfig\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(GitIgnoreFilePath)')" Include="$(GitIgnoreFilePath)" Pack="False" PackagePath="\" Link="GitConfig\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(GitModulesFilePath)')" Include="$(GitModulesFilePath)" Pack="False" PackagePath="\" Link="GitConfig\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(MailMapPath)')" Include="$(MailMapPath)" Pack="False" PackagePath="\" Link="GitConfig\%(RecursiveDir)%(Filename)%(Extension)"/>

    <None Condition="Exists('$(AuthorsFilePath)')" Include="$(AuthorsFilePath)" Pack="True" PackagePath="\" Link="PublishData\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(DescriptionFilePath)')" Include="$(DescriptionFilePath)" Pack="True" PackagePath="\" Link="PublishData\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(LicenseFilePath)')" Include="$(LicenseFilePath)" Pack="True" PackagePath="\" Link="PublishData\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(ChangelogFilePath)')" Include="$(ChangelogFilePath)" Pack="True" PackagePath="\" Link="PublishData\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(ReadmeFilePath)')" Include="$(ReadmeFilePath)" Pack="True" PackagePath="\" Link="PublishData\%(RecursiveDir)%(Filename)%(Extension)"/>
    <None Condition="Exists('$(VersionFilePath)')" Include="$(VersionFilePath)" Pack="True" PackagePath="\" Link="PublishData\%(RecursiveDir)%(Filename)%(Extension)"/>
  </ItemGroup>

  <ItemGroup Condition="$(IsTest) == true">
    <Using Include="Microsoft.VisualStudio.TestTools.UnitTesting" />
    <ProjectReference Include="..\$(SolutionName)\$(SolutionName).csproj" />
    <PackageReference Include="coverlet.collector" Version="6.0.2" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.10.0" />
    <PackageReference Include="MSTest.TestAdapter" Version="3.5.1" />
    <PackageReference Include="MSTest.TestFramework" Version="3.4.3" />
  </ItemGroup>

</Project>
